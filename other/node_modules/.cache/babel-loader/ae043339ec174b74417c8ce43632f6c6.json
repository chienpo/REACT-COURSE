{"ast":null,"code":"import _slicedToArray from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/src/components/task-two/TaskTwo.tsx\";\nimport React from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport Brand from './Brand';\nimport Model from './Model';\nimport Fuel from './Fuel';\nimport Transmission from './Transmission'; // import Checkout from './Checkout'\n\nimport { Page, Section, PageCounter, Controls, ControlButton, Tabs } from './styled/styled';\nvar TABS = {\n  BRAND: 'Brand',\n  MODEL: 'Model',\n  FUEL: 'Fuel',\n  TRANSMISSION: 'Transmission',\n  CHECKOUT: 'Checkout'\n};\n\nvar TaskTwo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskTwo, _React$Component);\n\n  function TaskTwo() {\n    var _getPrototypeOf2, _this$TABS_CONTENT;\n\n    var _this;\n\n    _classCallCheck(this, TaskTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskTwo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: TABS.BRAND,\n      currentPage: 1,\n      wizardForm: {\n        brand: {\n          value: '',\n          valid: false\n        },\n        model: {\n          value: '',\n          valid: false\n        },\n        fuel: {\n          value: '',\n          valid: false\n        },\n        transmission: {\n          value: '',\n          valid: false\n        }\n      },\n      nextButtonIsAllowed: false\n    };\n    _this.TABS_CONTENT = (_this$TABS_CONTENT = {}, _defineProperty(_this$TABS_CONTENT, TABS.BRAND, {\n      name: 'Brand',\n      component: function component(props) {\n        return React.createElement(Brand, {\n          checkboxValue: _this.state.wizardForm.brand.value,\n          onRadioChange: function onRadioChange(e) {\n            return _this.setVal(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n    }), _defineProperty(_this$TABS_CONTENT, TABS.MODEL, {\n      name: 'Model',\n      component: function component(props) {\n        return React.createElement(Model, {\n          checkboxValue: _this.state.wizardForm.model.value,\n          chosenBrand: _this.state.wizardForm.brand,\n          onRadioChange: function onRadioChange(e) {\n            return _this.setVal(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }\n    }), _defineProperty(_this$TABS_CONTENT, TABS.FUEL, {\n      name: 'Fuel',\n      component: function component(props) {\n        return React.createElement(Fuel, {\n          checkboxValue: _this.state.wizardForm.fuel.value,\n          onRadioChange: function onRadioChange(e) {\n            return _this.setVal(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }\n    }), _defineProperty(_this$TABS_CONTENT, TABS.TRANSMISSION, {\n      name: 'Transmission',\n      component: function component(props) {\n        return React.createElement(Transmission, {\n          checkboxValue: _this.state.wizardForm.transmission.value,\n          onRadioChange: function onRadioChange(e) {\n            return _this.setVal(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      }\n    }), _this$TABS_CONTENT);\n\n    _this.checkValidity = function (fieldValue) {\n      var isValid = true;\n      isValid = fieldValue !== '' && isValid;\n      return isValid;\n    };\n\n    _this.setVal = function (e) {\n      var fieldName = e.target.name;\n      var fieldValue = e.target.value;\n\n      var updatedWizardForm = _objectSpread({}, _this.state.wizardForm);\n\n      var updatedFormElement = _objectSpread({}, updatedWizardForm[fieldName]);\n\n      updatedFormElement.value = e.target.value;\n      updatedFormElement.valid = _this.checkValidity(fieldValue);\n      updatedWizardForm[fieldName] = updatedFormElement;\n\n      _this.setState({\n        wizardForm: updatedWizardForm\n      });\n    };\n\n    _this.setActivePage = function () {\n      var arr = Object.keys(TABS);\n      var index = arr.findIndex(function (k) {\n        return k === _this.state.activeTab.toUpperCase();\n      }) + 1;\n\n      _this.setState({\n        currentPage: index\n      });\n    };\n\n    _this.setPage = function (value) {\n      var page = Object.keys(TABS)[value - 1];\n\n      _this.setState({\n        activeTab: TABS[page],\n        currentPage: value\n      });\n    };\n\n    _this.checkNextButtonAllowed = function () {// const validValue = this.state.wizardForm[this.state.activeTab.toLowerCase()]\n      // let nextBtnIsValid\n      // if (validValue) {\n      //     nextBtnIsValid = validValue.valid ? true : false\n      // }\n      // return nextBtnIsValid\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskTwo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setActivePage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Section, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, Object.entries(this.TABS_CONTENT).map(function (_ref, index) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            tabName = _ref2[0],\n            Tab = _ref2[1];\n\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, _this2.state.activeTab === tabName && React.createElement(Tab.component, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }));\n      })), React.createElement(PageCounter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.state.currentPage), React.createElement(Controls, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.currentPage !== 1 && React.createElement(ControlButton, {\n        onClick: function onClick() {\n          return _this2.setPage(_this2.state.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Previous\"), this.state.currentPage !== Object.keys(TABS).length && React.createElement(ControlButton // disabled={!this.checkNextButtonAllowed()}\n      , {\n        onClick: function onClick() {\n          return _this2.setPage(_this2.state.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Next\"))));\n    }\n  }]);\n\n  return TaskTwo;\n}(React.Component);\n\nexport default TaskTwo;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/s.lagunovsky/react/git/src/components/task-two/TaskTwo.tsx"],"names":["React","Navigation","Brand","Model","Fuel","Transmission","Page","Section","PageCounter","Controls","ControlButton","Tabs","TABS","BRAND","MODEL","FUEL","TRANSMISSION","CHECKOUT","TaskTwo","state","activeTab","currentPage","wizardForm","brand","value","valid","model","fuel","transmission","nextButtonIsAllowed","TABS_CONTENT","name","component","props","e","setVal","checkValidity","fieldValue","isValid","fieldName","target","updatedWizardForm","updatedFormElement","setState","setActivePage","arr","Object","keys","index","findIndex","k","toUpperCase","setPage","page","checkNextButtonAllowed","entries","map","tabName","Tab","length","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Navigation from '../Navigation/Navigation'\nimport Brand from './Brand'\nimport Model from './Model'\nimport Fuel from './Fuel'\nimport Transmission from './Transmission'\n// import Checkout from './Checkout'\nimport { Page, Section, PageCounter, Controls, ControlButton, Tabs } from './styled/styled'\n\ninterface ITabs {\n    [key: string]: string;\n}\n\nconst TABS: ITabs = {\n    BRAND: 'Brand',\n    MODEL: 'Model',\n    FUEL: 'Fuel',\n    TRANSMISSION: 'Transmission',\n    CHECKOUT: 'Checkout'\n}\n\ninterface IWizardFormStrings {\n    value: string;\n    valid: boolean;\n}\n\ninterface IWizardFormElement {\n    [key: string]: IWizardFormStrings;\n}\n\ninterface IWizardForm {\n    [key: string]: IWizardFormElement;\n}\n\nclass TaskTwo extends React.Component {\n    state={\n        activeTab: TABS.BRAND,\n        currentPage: 1,\n        wizardForm: {\n            brand: {\n                value: '',\n                valid: false\n            },\n            model: {\n                value: '',\n                valid: false\n            },\n            fuel: {\n                value: '',\n                valid: false\n            },\n            transmission: {\n                value: '',\n                valid: false\n            }\n        },\n        nextButtonIsAllowed: false\n    }\n\n    TABS_CONTENT = {\n        [TABS.BRAND]: {\n            name: 'Brand',\n            component: (props: any) => <Brand\n                checkboxValue={this.state.wizardForm.brand.value}\n                onRadioChange={(e: any) => this.setVal(e)}\n            />\n        },\n        [TABS.MODEL]: {\n            name: 'Model',\n            component: (props: any) => <Model\n                checkboxValue={this.state.wizardForm.model.value}\n                chosenBrand={this.state.wizardForm.brand}\n                onRadioChange={(e: any) => this.setVal(e)}\n            />\n        },\n        [TABS.FUEL]: {\n            name: 'Fuel',\n            component: (props: any) => <Fuel\n                checkboxValue={this.state.wizardForm.fuel.value}\n                onRadioChange={(e: any) => this.setVal(e)}\n            />\n        },\n        [TABS.TRANSMISSION]: {\n            name: 'Transmission',\n            component: (props: any) => <Transmission\n                checkboxValue={this.state.wizardForm.transmission.value}\n                onRadioChange={(e: any) => this.setVal(e)}\n            />\n        },\n        // [TABS.CHECKOUT]: {\n        //     name: 'Checkout',\n        //     component: (props: any) => <Checkout\n        //         wizardForm={this.state.wizardForm}\n        //     />\n        // }\n    }\n\n    componentDidMount() {\n        this.setActivePage()\n    }\n\n\n    checkValidity = (fieldValue: any) => {\n        let isValid = true\n\n        isValid = fieldValue !== '' && isValid\n\n        return isValid\n    }\n\n    setVal = (e: any) => {\n        const fieldName: string = e.target.name\n        const fieldValue: string = e.target.value\n\n        const updatedWizardForm: any = {\n            ...this.state.wizardForm\n        }\n\n        const updatedFormElement: IWizardFormStrings = {\n            ...updatedWizardForm[fieldName]\n        }\n\n        updatedFormElement.value = e.target.value\n        updatedFormElement.valid = this.checkValidity(fieldValue)\n\n        updatedWizardForm[fieldName] = updatedFormElement\n\n        this.setState({\n            wizardForm: updatedWizardForm\n        })\n    }\n\n    setActivePage = () => {\n        let arr = Object.keys(TABS)\n\n        let index = arr.findIndex(k => k===(this.state.activeTab).toUpperCase()) + 1\n       \n        this.setState({currentPage: index})\n    }\n\n    setPage = (value: any) => {\n        const page = Object.keys(TABS)[value-1]\n\n        this.setState({\n            activeTab: TABS[page],\n            currentPage: value\n        })\n    }\n\n    checkNextButtonAllowed = () => {\n        // const validValue = this.state.wizardForm[this.state.activeTab.toLowerCase()]\n\n        // let nextBtnIsValid\n\n        // if (validValue) {\n        //     nextBtnIsValid = validValue.valid ? true : false\n        // }\n\n        // return nextBtnIsValid\n    }\n\n    render() {\n        return(\n            <Page>   \n                <Navigation />\n                <Section>\n                    <Tabs>\n                        {Object.entries(this.TABS_CONTENT).map(([tabName, Tab], index) => (\n                            <div key={index}>\n                                {this.state.activeTab === tabName && <Tab.component />}\n                            </div>\n                        ))}\n                    </Tabs>\n\n                    <PageCounter>{this.state.currentPage}</PageCounter>\n\n                    <Controls>\n                        {this.state.currentPage !== 1 && (\n                            <ControlButton\n                                onClick={() => this.setPage(this.state.currentPage - 1)}\n                            >Previous\n                            </ControlButton>\n                        )}\n\n                        {this.state.currentPage !== Object.keys(TABS).length && (\n                            <ControlButton\n                                // disabled={!this.checkNextButtonAllowed()}\n                                onClick={() => this.setPage(this.state.currentPage + 1)}\n                            >Next\n                            </ControlButton>\n                        )}\n                    </Controls>\n                </Section>\n            </Page>\n        )\n    }\n}\n\nexport default TaskTwo\n"]},"metadata":{},"sourceType":"module"}