{"ast":null,"code":"import _objectSpread from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nvar initialState = {\n  counter: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PLUS:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.MINUS:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.TIMES:\n      return _objectSpread({}, state, {\n        counter: state.counter + action.val\n      });\n\n    case actionTypes.DIV:\n      return _objectSpread({}, state, {\n        counter: state.counter - action.val\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/s.lagunovsky/react/git/src/store/reducers/calculate.tsx"],"names":["actionTypes","initialState","counter","reducer","state","action","type","PLUS","MINUS","TIMES","val","DIV"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BH,YAA8B;AAAA,MAAhBI,MAAgB;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,IAAjB;AACI,+BACOH,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAF7B;;AAIJ,SAAKF,WAAW,CAACQ,KAAjB;AACI,+BACOJ,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAF7B;;AAIJ,SAAKF,WAAW,CAACS,KAAjB;AACI,+BACOL,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAFpC;;AAIJ,SAAKV,WAAW,CAACW,GAAjB;AACI,+BACOP,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAFpC;AAjBR;;AAsBA,SAAON,KAAP;AACH,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n    counter: 0\n}\n\nconst reducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case actionTypes.PLUS:\n            return {\n                ...state,\n                counter: state.counter + 1\n            }\n        case actionTypes.MINUS:\n            return {\n                ...state,\n                counter: state.counter - 1\n            }\n        case actionTypes.TIMES:\n            return {\n                ...state,\n                counter: state.counter + action.val\n            }\n        case actionTypes.DIV:\n            return {\n                ...state,\n                counter: state.counter - action.val\n            }\n    }\n    return state\n};\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}