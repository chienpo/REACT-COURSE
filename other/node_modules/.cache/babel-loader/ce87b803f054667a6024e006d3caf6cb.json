{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/other/src/components/task-one/ArticlesList.tsx\";\nimport React from 'react';\nimport Spinner from '../UI/Spinner';\nimport { Article, Description, ImageHolder } from './styled/';\n\nvar ArticlesList = function ArticlesList(props) {\n  var currentTab = props.currentTab,\n      articles = props.articles,\n      loading = props.loading;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, currentTab), !loading && articles.length > 0 ? articles.map(function (article) {\n    return React.createElement(Article, {\n      key: article.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, article.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, article.description)), React.createElement(ImageHolder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: article.urlToImage,\n      alt: article.urlToImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default ArticlesList;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/s.lagunovsky/react/git/other/src/components/task-one/ArticlesList.tsx"],"names":["React","Spinner","Article","Description","ImageHolder","ArticlesList","props","currentTab","articles","loading","length","map","article","title","description","urlToImage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,WAAlD;;AAgBA,IAAMC,YAAwD,GAAG,SAA3DA,YAA2D,CAAEC,KAAF,EAAa;AAAA,MAClEC,UADkE,GAChCD,KADgC,CAClEC,UADkE;AAAA,MACtDC,QADsD,GAChCF,KADgC,CACtDE,QADsD;AAAA,MAC5CC,OAD4C,GAChCH,KADgC,CAC5CG,OAD4C;AAG1E,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,UAAL,CADJ,EAGK,CAACE,OAAD,IAAYD,QAAQ,CAACE,MAAT,GAAkB,CAA9B,GACGF,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD;AAAA,WACb,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACC,KAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,WAAZ,CAFJ,CAFJ,EAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEF,OAAO,CAACG,UAAlB;AAA8B,MAAA,GAAG,EAAEH,OAAO,CAACG,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADa;AAAA,GAAb,CADH,GAYI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfT,CADJ;AAmBH,CAtBD;;AAwBA,eAAeV,YAAf","sourcesContent":["import React from 'react'\n\nimport Spinner from '../UI/Spinner'\nimport { Article, Description, ImageHolder } from './styled/'\n\n\ninterface IArticle {\n    title: string;\n    description: string;\n    urlToImage: string;\n}\n\ninterface IArticlesListProps {\n    currentTab: string;\n    articles: IArticle[];\n    loading: boolean;\n}\n\n\nconst ArticlesList: (props: IArticlesListProps) => JSX.Element = ( props ) => {\n    const { currentTab, articles, loading } = props\n\n    return (\n        <>\n            <h1>{currentTab}</h1>\n\n            {!loading && articles.length > 0 ? \n                articles.map((article) => (\n                <Article\n                    key={article.title}>\n                    <Description>\n                        <h3>{article.title}</h3>\n                        <p>{article.description}</p>\n                    </Description>\n                    <ImageHolder>\n                        <img src={article.urlToImage} alt={article.urlToImage} />\n                    </ImageHolder>\n                </Article>\n            )) : <Spinner/>}\n        </>\n    )\n}\n\nexport default ArticlesList\n"]},"metadata":{},"sourceType":"module"}