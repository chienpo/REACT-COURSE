{"ast":null,"code":"import _objectSpread from \"/home/ITRANSITION.CORP/s.lagunovsky/react/git/other/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions';\nvar initialState = {\n  total: null,\n  operation: null,\n  next: null\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AC:\n      return _objectSpread({}, state, {\n        total: null,\n        next: null,\n        operation: null\n      });\n\n    case actionTypes.ONE || actionTypes.TWO || actionTypes.THREE || actionTypes.FOUR || actionTypes.FIVE || actionTypes.SIX || actionTypes.SEVEN || actionTypes.EIGHT || actionTypes.NINE:\n      if (Number(buttonName)) {\n        if (buttonName === \"0\" && obj.next === \"0\") {\n          return {};\n        } // If there is an operation, update next\n\n\n        if (obj.operation) {\n          if (obj.next) {\n            return {\n              next: obj.next + buttonName\n            };\n          }\n\n          return {\n            next: buttonName\n          };\n        } // If there is no operation, update next and clear the value\n\n\n        if (obj.next) {\n          return {\n            next: obj.next + buttonName,\n            total: null\n          };\n        }\n\n        return {\n          next: buttonName,\n          total: null\n        };\n      }\n\n      return _objectSpread({}, state, {\n        total: null,\n        next: null,\n        operation: null\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/s.lagunovsky/react/git/other/src/store/reducers/calculate.tsx"],"names":["actionTypes","initialState","total","operation","next","reducer","state","action","type","AC","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","Number","buttonName","obj"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,SAAS,EAAE,IAFM;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BL,YAA8B;AAAA,MAAhBM,MAAgB;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,EAAjB;AACI,+BACOH,KADP;AAEIJ,QAAAA,KAAK,EAAE,IAFX;AAGIE,QAAAA,IAAI,EAAE,IAHV;AAIID,QAAAA,SAAS,EAAE;AAJf;;AAMJ,SAAKH,WAAW,CAACU,GAAZ,IAAmBV,WAAW,CAACW,GAA/B,IAAsCX,WAAW,CAACY,KAAlD,IAA2DZ,WAAW,CAACa,IAAvE,IAA+Eb,WAAW,CAACc,IAA3F,IAAmGd,WAAW,CAACe,GAA/G,IAAsHf,WAAW,CAACgB,KAAlI,IAA2IhB,WAAW,CAACiB,KAAvJ,IAAgKjB,WAAW,CAACkB,IAAjL;AACI,UAAIC,MAAM,CAACC,UAAD,CAAV,EAAwB;AACpB,YAAIA,UAAU,KAAK,GAAf,IAAsBC,GAAG,CAACjB,IAAJ,KAAa,GAAvC,EAA4C;AACxC,iBAAO,EAAP;AACH,SAHmB,CAIpB;;;AACA,YAAIiB,GAAG,CAAClB,SAAR,EAAmB;AACf,cAAIkB,GAAG,CAACjB,IAAR,EAAc;AACV,mBAAO;AAAEA,cAAAA,IAAI,EAAEiB,GAAG,CAACjB,IAAJ,GAAWgB;AAAnB,aAAP;AACH;;AACD,iBAAO;AAAEhB,YAAAA,IAAI,EAAEgB;AAAR,WAAP;AACH,SAVmB,CAWpB;;;AACA,YAAIC,GAAG,CAACjB,IAAR,EAAc;AACV,iBAAO;AACHA,YAAAA,IAAI,EAAEiB,GAAG,CAACjB,IAAJ,GAAWgB,UADd;AAEHlB,YAAAA,KAAK,EAAE;AAFJ,WAAP;AAIH;;AACD,eAAO;AACHE,UAAAA,IAAI,EAAEgB,UADH;AAEHlB,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH;;AAED,+BACOI,KADP;AAEIJ,QAAAA,KAAK,EAAE,IAFX;AAGIE,QAAAA,IAAI,EAAE,IAHV;AAIID,QAAAA,SAAS,EAAE;AAJf;AAjCR;;AAwCA,SAAOG,KAAP;AACH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n    total: null,\n    operation: null,\n    next: null\n};\n\nconst reducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case actionTypes.AC:\n            return {\n                ...state,\n                total: null,\n                next: null,\n                operation: null\n            };\n        case actionTypes.ONE || actionTypes.TWO || actionTypes.THREE || actionTypes.FOUR || actionTypes.FIVE || actionTypes.SIX || actionTypes.SEVEN || actionTypes.EIGHT || actionTypes.NINE:\n            if (Number(buttonName)) {\n                if (buttonName === \"0\" && obj.next === \"0\") {\n                    return {};\n                }\n                // If there is an operation, update next\n                if (obj.operation) {\n                    if (obj.next) {\n                        return { next: obj.next + buttonName };\n                    }\n                    return { next: buttonName };\n                }\n                // If there is no operation, update next and clear the value\n                if (obj.next) {\n                    return {\n                        next: obj.next + buttonName,\n                        total: null,\n                    };\n                }\n                return {\n                    next: buttonName,\n                    total: null,\n                };\n            }\n\n            return {\n                ...state,\n                total: null,\n                next: null,\n                operation: null\n            };\n    }\n    return state\n};\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}